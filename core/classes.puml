@startuml classes
set namespaceSeparator none
class User {
    __name: str
    __id: int
    __interests: list[Tag]

    __init__(self, name: str, id: int) -> None

    get_name(self) -> str

    get_id(self) -> int

    set_name(self, name: str) -> None

    get_interests(self) -> list[Tag]

    add_interest(self, interest: Tag) -> None
}

class Club {
    __name: str
    __description: str
    __users: list[User]
    __members: int
    __setting: str
    __tags: list[Tag]
    __chat: Chat
    __calendar: Calendar


    get_name(self) -> str

    set_name(self, name: str) -> None

    get_description(self) -> str

    set_description(self, description: str) -> None

    get_users(self) -> list[User]

    add_user(self, user: User) -> None

    get_members(self) -> int

    inc_members(self) -> None

    dec_members(self) -> None

    get_setting(self) -> str

    set_setting(self, setting: str) -> None

    get_tags(self) -> list[Tag]

    add_tags(self, tag: Tag) -> None

    get_chat(self) -> Chat

    get_calendar(self) -> Calendar
}

class Tag {
    __name: str
    __description: str

    __init__(self, name: str, description: str) -> None

    get_name(self) -> str

    set_name(self, name: str) -> None
    
    get_description(self) -> str

    set_description(self, description: str) -> None:
}

class Chat {
    logs: dict[int, list[str]]

    __init__(self) -> None

    add_user(self, user_id) -> None

    add_message(self, user_id, message: str) -> None

    get_logs(self) -> dict[int, list[str]]
}

class Calendar {
    reminders: dict[str, list[str]]

    __init__(self) -> None

    get_reminders(self) -> dict[str, list[str]]

    add_reminder(self, date: str, reminder: str) -> None

    remove_reminders(self, date: str) -> None
}
@enduml